additionalArguments:
- --log.filepath=/var/log/traefik/traefik.log
certificatesResolvers:
  production:
    acme:
      caServer: https://acme-v02.api.letsencrypt.org/directory
      email: ryan_harbert@wgbh.org
      storage: /ssl-certs/acme-production.json
      tlsChallenge: true
  staging:
    acme:
      caServer: https://acme-staging-v02.api.letsencrypt.org/directory
      email: ryan_harbert@wgbh.org
      storage: /ssl-certs/acme-staging.json
      tlsChallenge: true
deployment:
  podAnnotations:
    prometheus.io/path: /metrics
    prometheus.io/port: '9100'
    prometheus.io/scrape: 'true'
env: null
experimental:
  plugins:
    bouncer:
      moduleName: github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin
      version: v1.4.1
    captcha-protect:
      moduleName: github.com/libops/captcha-protect
      version: v1.0.0
ingressClass:
  enabled: true
  isDefaultClass: true
ingressRoute:
  dashboard:
    enabled: true
logs:
  access:
    enabled: true
    fields:
      headers:
        defaultmode: keep
  general:
    level: DEBUG
metrics:
  addInternals: true
  otlp:
    enabled: true
    endpoint: loki-gateway.loki/loki/api/v1/push
    headers:
      X-Scope-OrgID: traefik
  prometheus:
    addRoutersLabels: true
    headerLabels:
      ip: request_X-Real-Ip
      useragent: request_User-Agent
persistence:
  enabled: true
  accessMode: ReadWriteMany
  # storageClass: efs-sc
  existingClaim: ssl-certs
  path: /ssl-certs
ports:
  web:
    redirections:
      entryPoint:
        permanent: true
        scheme: https
        to: websecure
  websecure:
    forwardedHeaders:
      trustedIPs:
      - 10.0.32.0/24
    proxyProtocol:
      trustedIPs:
      - 10.0.0.0/20
    tls:
      certResolver: production
      enabled: true
providers:
  kubernetesCRD:
    allowExternalNameServices: true
    enabled: true
  kubernetesIngress:
    allowExternalNameServices: true
securityContext:
  readOnlyRootFilesystem: false
  runAsGroup: 0
  runAsNonRoot: false
  runAsUser: 0
service:
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: '*'
    # service.beta.kubernetes.io/aws-load-balancer-type: nlb-ip
  spec:
    externalTrafficPolicy: Local
