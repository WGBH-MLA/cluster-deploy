additionalArguments:
  # Staging:
  - --certificatesresolvers.staging.acme.email=ryan_harbert@wgbh.org
  - --certificatesresolvers.staging.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
  # - --certificatesresolvers.staging.acme.httpChallenge.entryPoint=web
  - --certificatesresolvers.staging.acme.storage=/ssl-certs/acme-staging.json
  - --certificatesresolvers.staging.acme.tlschallenge=true

  # Production
  - --certificatesresolvers.production.acme.email=ryan_harbert@wgbh.org
  - --certificatesresolvers.production.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
  # - --certificatesresolvers.production.acme.httpChallenge.entryPoint=web
  - --certificatesresolvers.production.acme.storage=/ssl-certs/acme-production.json
  - --certificatesresolvers.production.acme.tlschallenge=true

logs:
  general:
    level: ERROR
  access:
    enabled: true
    format: json
    # filePath: /var/log/access.log
    # bufferingSize: 10
    # fields:
    #   headers:
    #     defaultmode: keep

ports:
  web:
    # Permanent Redirect to HTTPS
    redirectTo:
      port: websecure

  websecure:
    tls:
      enabled: true
      # Set a Default CertResolver
      certResolver: production
    forwardedHeaders:
      # Trust forwared headers from the CLAMS subnet
      trustedIPs:
        - '10.0.32.0/24'
    proxyProtocol:
      # TODO: How to get the actual loadbalancer IP?
      trustedIPs:
        - '10.0.0.0/16'

env:
# Disable Dashboard
ingressRoute:
  dashboard:
    enabled: false

# Persistent Storage
persistence:
  enabled: true
  existingClaim: ssl-certs
  path: /ssl-certs

# deployment:
#   initContainers:
#     # The "volume-permissions" init container is required if you run into permission issues.
#     # Related issue: https://github.com/containous/traefik/issues/6972
#     - name: volume-permissions
#       image: busybox:1.31.1
#       command: ['sh', '-c', 'chmod -Rv 600 /ssl-certs/*']
#       volumeMounts:
#         - name: ssl-certs
#           mountPath: /ssl-certs

# Set Traefik as your default Ingress Controller, according to Kubernetes 1.19+ changes.
ingressClass:
  enabled: true
  isDefaultClass: true

service:
  spec:
    # Set the externalTrafficPolicy to Local to preserve the client source IP
    externalTrafficPolicy: Local
  annotations:
    # Enable Proxy Protocol for AWS Load Balancer
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: '*'
